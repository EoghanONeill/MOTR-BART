library(CredInd)
library(ggplot2)
# ReadData(Indicator = 'bababa rate', Index = 'Total')
 data1 <- ReadData(Indicator = 'Interest rate', Index = 'Total')
# ReadData(Indicator = 'Interest rate', Index = 'New operations companies')
# ReadData(Indicator = 'Interest rate', Index = 'New operations households')
# ReadData(Indicator = 'Interest rate', Index = 'Non-revolving total')
# ReadData(Indicator = 'Interest rate', Index = 'Non-revolving companies')
# ReadData(Indicator = 'Interest rate', Index = 'Non-revolving households')
#
# ReadData(Indicator = 'Spread', Index = 'Total')
# ReadData(Indicator = 'Spread', Index = 'New operations companies')
# ReadData(Indicator = 'Spread', Index = 'New operations households')
# ReadData(Indicator = 'Spread', Index = 'Non-revolving total')
# ReadData(Indicator = 'Spread', Index = 'Non-revolving companies')
# ReadData(Indicator = 'Spread', Index = 'Non-revolving households')
#
# ReadData(Indicator = 'Household debt', Index = 'Total')
# ReadData(Indicator = 'Household debt', Index = 'Without mortgage')
#
# ReadData(Indicator = 'Allowance', Index = 'Total')
# ReadData(Indicator = 'Allowance', Index = 'Public banks')
# ReadData(Indicator = 'Allowance', Index = 'National private control')
# ReadData(Indicator = 'Allowance', Index = 'Foreign control')
# ReadData(Indicator = 'Allowance', Index = 'Private control')

SaveFigures <- "/Users/estevaoprado/OneDrive - Maynooth University/My_package/Presentation/"

data1 <- ReadData(Indicator = 'Interest rate', Index = 'Total')
model1 <- FitModels(data = data1, horizon=20)
pdf(paste(SaveFigures,'Interest_rate_total.pdf', sep = ''), width = 8, height = 6)
plot_FitModels(model1)
dev.off()

data2 <- ReadData(Indicator = 'Spread', Index = 'New operations households')
model2 <- FitModels(data = data2, horizon=20)
pdf(paste(SaveFigures,'Spread_household.pdf', sep = ''), width = 8, height = 6)
plot_FitModels(model2)
dev.off()


################################################################

library(dplyr)
library(reshape2)

ReadData1 <- function(Indicator, Index) {
  
  setwd("/Users/estevaoprado/OneDrive - Maynooth University/My_package/CredInd/R")
  
  Aux_files <- c('Allowance_198806_201903.csv',
                 '90_past_due_loans_201103_201903.csv',
                 '90_past_due_loans_by_origin_capital_20003_201903.csv',
                 'Average_spread_yearly_201103_201903.csv',
                 'House_debt_200501_201903.csv',
                 'Interest_rates_yearly_201103_201903.csv')
  
  Aux_info <- c('Allowance',
                'Due loans',
                'Due loans by capital',
                'Spread',
                'Household debt',
                'Interest rate')
  Index_aux = ''
  
  if (Indicator == 'Allowance' && Index=='Total')                   {Index_aux = 'X13645'} else
    if (Indicator == 'Allowance' && Index=='Public banks')            {Index_aux = 'X13666'} else
      if (Indicator == 'Allowance' && Index=='National private control'){Index_aux = 'X13672'} else
        if (Indicator == 'Allowance' && Index=='Foreign control')         {Index_aux = 'X13678'} else
          if (Indicator == 'Allowance' && Index=='Private control')         {Index_aux = 'X13684'}
  
  if (Indicator == 'Spread' && Index=='Total')                      {Index_aux = 'X20783'} else
    if (Indicator == 'Spread' && Index=='New operations companies')   {Index_aux = 'X20784'} else
      if (Indicator == 'Spread' && Index=='New operations households')  {Index_aux = 'X20785'} else
        if (Indicator == 'Spread' && Index=='Non-revolving total')        {Index_aux = 'X27631'} else
          if (Indicator == 'Spread' && Index=='Non-revolving companies')    {Index_aux = 'X27632'} else
            if (Indicator == 'Spread' && Index=='Non-revolving households')   {Index_aux = 'X27633'}
  
  if (Indicator == 'Household debt' && Index=='Total')                  {Index_aux = 'X20400'} else
    if (Indicator == 'Household debt' && Index=='Without mortgage')       {Index_aux = 'X19882'}
  
  if (Indicator == 'Interest rate' && Index=='Total')                     {Index_aux = 'X20714'} else
    if (Indicator == 'Interest rate' && Index=='New operations companies')  {Index_aux = 'X20715'} else
      if (Indicator == 'Interest rate' && Index=='New operations households') {Index_aux = 'X20716'} else
        if (Indicator == 'Interest rate' && Index=='Non-revolving total')       {Index_aux = 'X27623'} else
          if (Indicator == 'Interest rate' && Index=='Non-revolving companies')   {Index_aux = 'X27624'} else
            if (Indicator == 'Interest rate' && Index=='Non-revolving households')  {Index_aux = 'X27625'}
  
  if (Index_aux == '') {stop("ERROR: At least one of the parameters (Indicator or Index) was misspelled. Check it out and try again.")}
  
  aux <- as.data.frame(cbind(Aux_files, Aux_info))
  
  # Selecting the databaset associated to the indicator
  NamesFiles <- aux %>% filter(Aux_info==Indicator) %>% select(Aux_files)
  
  # Reading the data and deleting the last row
  db <- read.csv(text=paste0(head(readLines(paste('',NamesFiles[1,1],'', sep ='')), -1), collapse="\n"), sep = ';', header=T, na.strings = c('-'))
  
  # Changing the names of the columns
  names(db) <- c(substr(names(db),1,6))
  
  # Transposing the data
  db <- db %>%
    melt(id.vars = c('Date'), na.rm = T) 
  # %>%
  # filter(variable == Index_aux)
  
  # db$variable <- paste(Indicator,'-', Index)
  db$Date <- as.Date(paste('01/', as.character(db$Date), sep = ''), format = '%d/%m/%Y')
  
  final_list <- list(data = db)
  
  class(final_list) = 'CredInd'
  
  return(final_list)
}


# Interest rate -------- 
aux <- ReadData1(Indicator = 'Interest rate', Index = 'New operations companies')
db <- aux$data
pdf(paste(SaveFigures,'Intro_interest_rate.pdf', sep = ''), width = 8, height = 6)
ggplot(db, aes(x = Date, y = value)) +
  geom_line(aes(color = variable)) +
  labs(title = paste('Time series for Interest rate'),
       subtitle = 'Information from the Central Bank of Brazil',
       x = 'Date',
       y = 'Interest rate (% per year)') +
  theme(plot.title = element_text(size=18),
        legend.position = 'top') + 
  scale_color_discrete(name = "Index", labels = c("Total", "New operations companies", "New operations households", 'Non-revolving total', 'Non-revolving companies', 'Non-revolving households'))
dev.off()

# Spread -------- 
aux <- ReadData1(Indicator = 'Spread', Index = 'New operations companies')
db <- aux$data
pdf(paste(SaveFigures,'Intro_spread.pdf', sep = ''), width = 8, height = 6)
ggplot(db, aes(x = Date, y = value)) +
  geom_line(aes(color = variable)) +
  labs(title = paste('Time series for Spread'),
       subtitle = 'Information from the Central Bank of Brazil',
       x = 'Date',
       y = 'Spread (% percentage point)') +
  theme(plot.title = element_text(size=18),
        legend.position = 'top') + 
  scale_color_discrete(name = "Index", labels = c("Total", "New operations companies", "New operations households", 'Non-revolving total', 'Non-revolving companies', 'Non-revolving households'))
dev.off()
